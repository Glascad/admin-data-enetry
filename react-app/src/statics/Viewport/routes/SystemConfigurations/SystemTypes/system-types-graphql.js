import gql from 'graphql-tag';

export const query = gql`{
    allSystemTypes{
        nodes{
            nodeId
            id
            type
            systemTypeDetailTypesBySystemTypeId{
                nodes{
                    nodeId
                    detailTypeByDetailTypeId{
                        nodeId
                        id
                        type
                        vertical
                        entrance
                    }
                }
            }
            systemTypeDetailTypeConfigurationTypesBySystemTypeId{
                nodes{
                    nodeId
                    required
                    mirrorable
                    detailTypeId
                    detailTypeByDetailTypeId{
                        nodeId
                        id
                    }
                    configurationTypeId
                    configurationTypeByConfigurationTypeId{
                        nodeId
                        id
                        type
                        door
                        overrideLevel
                        presentationLevel
                    }
                }
            }
        }
    }
}`;

export const create = {
    mutation: gql`mutation CreateSystemType(
        $type:String!
    ){
        createSystemType(input:{
            type:$type
        }){
            systemType{
                nodeId
                id
                type
                systemTypeDetailTypesBySystemTypeId{
                    nodes{
                        nodeId
                        detailTypeByDetailTypeId{
                            nodeId
                            id
                            type
                            vertical
                            entrance
                        }
                    }
                }
                systemTypeDetailTypeConfigurationTypesBySystemTypeId{
                    nodes{
                        nodeId
                        required
                        mirrorable
                        detailTypeByDetailTypeId{
                            nodeId
                            id
                        }
                        configurationTypeByConfigurationTypeId{
                            nodeId
                            id
                            type
                            door
                            overrideLevel
                            presentationLevel
                        }
                    }
                }
            }
        }
    }`,
};

export const update = {
    mutation: gql`mutation UpdateSystemType(
        $nodeId:ID!,
        $type:String!
    ){
        updateSystemType(
            input:{
                nodeId:$nodeId
                systemTypePatch:{
                    type:$type
                }
            }
        ){
            systemType{
                nodeId
                id
                type
                systemTypeDetailTypesBySystemTypeId{
                    nodes{
                        nodeId
                        detailTypeByDetailTypeId{
                            nodeId
                            id
                            type
                            vertical
                            entrance
                        }
                    }
                }
                systemTypeDetailTypeConfigurationTypesBySystemTypeId{
                    nodes{
                        nodeId
                        required
                        mirrorable
                        detailTypeByDetailTypeId{
                            nodeId
                            id
                        }
                        configurationTypeByConfigurationTypeId{
                            nodeId
                            id
                            type
                            door
                            overrideLevel
                            presentationLevel
                        }
                    }
                }
            }
        }
    }`,
};

export const _delete = {
    mutation: gql`mutation DeleteSystemType(
        $nodeId:ID!
    ){
        deleteSystemType(
            input:{
                nodeId:$nodeId
            }
        ){
            systemType{
                nodeId
                id
                type
                systemTypeDetailTypesBySystemTypeId{
                    nodes{
                        nodeId
                        detailTypeByDetailTypeId{
                            nodeId
                            id
                            type
                            vertical
                            entrance
                        }
                    }
                }
                systemTypeDetailTypeConfigurationTypesBySystemTypeId{
                    nodes{
                        nodeId
                        required
                        mirrorable
                        detailTypeByDetailTypeId{
                            nodeId
                            id
                        }
                        configurationTypeByConfigurationTypeId{
                            nodeId
                            id
                            type
                            door
                            overrideLevel
                            presentationLevel
                        }
                    }
                }
            }
        }
    }`,
};
